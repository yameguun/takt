<% provide(:title, "カレンダー") %>
<div id="wrapper">
  <%= render 'shared/header' %>
  <div id="page-wrapper" class="gray-bg">
    <%= render 'shared/navbar' %>
    
    <!-- ヘッダー部分 -->
    <div class="row wrapper border-bottom white-bg page-heading">
      <div class="col-lg-12">
        <h2 class="m-t-md">
          <i class="fa fa-calendar-o text-navy"></i> カレンダー
        </h2>
        <ol class="breadcrumb">
          <li class="breadcrumb-item">
            <a href="/">ホーム</a>
          </li>
          <li class="breadcrumb-item active">
            <strong>カレンダー</strong>
          </li>
        </ol>
      </div>
    </div>

    <!-- メインコンテンツ -->
    <div class="wrapper wrapper-content animated fadeInRight">
      <% 
        prev_month = @current_date.prev_month
        next_month = @current_date.next_month
        daily_reports_dates = (@daily_reports_dates || Set.new)
        overtime_dates = (@overtime_dates || Set.new)
        overtime_hours_by_date = (@overtime_hours_by_date || {})
        overtime_minutes_by_date = (@overtime_minutes_by_date || {})
        reports_by_date = (@reports_by_date || {})
        manager_comments_count_by_date = (@manager_comments_count_by_date || {})
      %>

      <!-- カレンダーメイン -->
      <div class="row">
        <div class="col-lg-12">
          <div class="ibox float-e-margins">
            <div class="ibox-title">
              <div class="row">
                <div class="col-md-6">
                  <h5>
                    <i class="fa fa-calendar text-navy"></i>
                    <%= @current_date.strftime('%Y年%-m月') %> カレンダー
                  </h5>
                </div>
                <div class="col-md-6 text-right">
                  <!-- 月移動ボタン -->
                  <div class="btn-group">
                    <%= link_to calendar_path(year: prev_month.year, month: prev_month.month), 
                        class: 'btn btn-white btn-sm' do %>
                      <i class="fa fa-chevron-left"></i> 前月
                    <% end %>
                    <%= link_to calendar_path(year: Date.current.year, month: Date.current.month), 
                        class: 'btn btn-primary btn-sm' do %>
                      <i class="fa fa-dot-circle-o"></i> 今月
                    <% end %>
                    <%= link_to calendar_path(year: next_month.year, month: next_month.month), 
                        class: 'btn btn-white btn-sm' do %>
                      次月 <i class="fa fa-chevron-right"></i>
                    <% end %>
                  </div>
                </div>
              </div>
            </div>

            <div class="ibox-content no-padding">
              <div class="calendar-container">
                <!-- 曜日ヘッダー -->
                <div class="calendar-header">
                  <div class="calendar-day-header sunday">日</div>
                  <div class="calendar-day-header">月</div>
                  <div class="calendar-day-header">火</div>
                  <div class="calendar-day-header">水</div>
                  <div class="calendar-day-header">木</div>
                  <div class="calendar-day-header">金</div>
                  <div class="calendar-day-header saturday">土</div>
                </div>

                <!-- カレンダー本体 -->
                <div class="calendar-body">
                  <% 
                    month_start = @current_date.beginning_of_month
                    month_end = @current_date.end_of_month
                    calendar_start = month_start.beginning_of_week(:sunday)
                    calendar_end = month_end.end_of_week(:sunday)
                  %>
                  
                  <% (calendar_start..calendar_end).each do |date| %>
                    <% 
                      is_current_month = date.month == @current_date.month
                      is_today = date == Date.current
                      is_weekend = date.wday == 0 || date.wday == 6
                      is_future = date > Date.current
                      
                      has_report = daily_reports_dates.include?(date)
                      has_overtime = overtime_dates.include?(date)
                      overtime_hours = overtime_hours_by_date[date].to_f
                      report = reports_by_date[date]
                      manager_comments_count = manager_comments_count_by_date[date] || 0
                      
                      cell_classes = ['calendar-day']
                      cell_classes << 'other-month' unless is_current_month
                      cell_classes << 'today' if is_today
                      cell_classes << 'weekend' if is_weekend
                    %>
                    
                    <div class="<%= cell_classes.join(' ') %>" data-date="<%= date.strftime('%Y-%m-%d') %>">
                      <div class="day-header">
                        <span class="day-number <%= 'text-danger' if date.wday == 0 %> <%= 'text-info' if date.wday == 6 %>">
                          <%= date.day %>
                        </span>
                        <% if is_today %>
                          <span class="today-badge">今日</span>
                        <% end %>
                      </div>

                      <% if is_current_month %>
                        <div class="day-content">
                          <% if is_future %>
                            <!-- 未来の日付 -->
                            <div class="status-item future">
                              <i class="fa fa-calendar-o text-muted"></i>
                              <span class="text-muted">未来</span>
                            </div>
                          <% else %>
                            <!-- 平日の処理 -->
                            <% if has_report && report.content.present? %>
                              <div class="status-item report-done">
                                <i class="fa fa-check-circle"></i>
                                <span>日報済</span>
                              </div>
                            <% else %>
                              <div class="status-item report-missing">
                                <i class="fa fa-exclamation-triangle"></i>
                                <span>未提出</span>
                              </div>
                            <% end %>
                            
                            <% if has_overtime && overtime_hours > 0 %>
                              <div class="status-item overtime">
                                <i class="fa fa-clock-o"></i>
                                <span>+<%= overtime_hours %>h</span>
                              </div>
                            <% elsif has_overtime %>
                              <!-- フラグベースの残業（時間超過なし） -->
                              <div class="status-item overtime">
                                <i class="fa fa-clock-o"></i>
                                <span>残業</span>
                              </div>
                            <% end %>
                            
                            <!-- マネージャーコメント表示 -->
                            <% if has_report && manager_comments_count > 0 %>
                              <button class="status-item comments-indicator comment-display-btn" 
                                      data-date="<%= date.strftime('%Y年%m月%d日') %>"
                                      data-report-id="<%= report.id %>"
                                      title="クリックしてコメントを確認">
                                <i class="fa fa-comments"></i>
                                <span>コメント</span>
                                <span class="badge badge-comments"><%= manager_comments_count %></span>
                              </button>
                            <% end %>
                          <% end %>
                          
                          <!-- アクションボタン（平日のみ） -->
                          <% if !is_future %>
                            <div class="day-actions">
                              <% if has_report && report.content.present? %>
                                <%= link_to daily_reports_path(report_date: date.strftime('%Y-%m-%d')), 
                                    class: 'btn btn-xs btn-white', 
                                    title: '日報を確認' do %>
                                  <i class="fa fa-eye"></i>
                                <% end %>
                                <% if manager_comments_count > 0 %>
                                  <button class="btn btn-xs btn-info comment-view-btn" 
                                          data-report-id="<%= report.id %>"
                                          data-date="<%= date.strftime('%Y年%m月%d日') %>"
                                          title="コメントを確認">
                                    <i class="fa fa-comments"></i>
                                  </button>
                                <% end %>
                              <% else %>
                                <%= link_to daily_reports_path(report_date: date.strftime('%Y-%m-%d')), 
                                    class: 'btn btn-xs btn-success', 
                                    title: '日報を作成' do %>
                                  <i class="fa fa-plus"></i>
                                <% end %>
                              <% end %>
                            </div>
                          <% end %>
                        </div>
                      <% end %>
                    </div>
                  <% end %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- 統計情報 -->
      <div class="row">
        <% 
          working_days = (@current_date.beginning_of_month..@current_date.end_of_month)
                        .count { |d| d.cwday.between?(1, 5) && d <= Date.current }
          submitted_count = daily_reports_dates.count { |d| d.month == @current_date.month }
          completion_rate = working_days > 0 ? (submitted_count.to_f / working_days * 100).round(1) : 0
          
          current_month_overtime = overtime_dates.select { |d| d.month == @current_date.month }
          total_overtime_hours = overtime_hours_by_date
                                .select { |d, _| d.month == @current_date.month }
                                .values
                                .sum
                                
          # 今月のマネージャーコメント数
          current_month_manager_comments = manager_comments_count_by_date
                                          .select { |d, _| d.month == @current_date.month }
                                          .values
                                          .sum
        %>
        
        <div class="col-lg-3 col-md-6">
          <div class="ibox float-e-margins">
            <div class="ibox-title">
              <span class="label label-success pull-right">
                <%= submitted_count %>
              </span>
              <h5>日報提出済</h5>
            </div>
            <div class="ibox-content">
              <h1 class="no-margins text-success"><%= completion_rate %>%</h1>
              <div class="stat-percent font-bold text-success">
                <i class="fa fa-level-up"></i> 提出率
              </div>
              <small>営業日: <%= working_days %>日</small>
            </div>
          </div>
        </div>
        
        <div class="col-lg-3 col-md-6">
          <div class="ibox float-e-margins">
            <div class="ibox-title">
              <span class="label label-warning pull-right">
                <%= current_month_overtime.count %>
              </span>
              <h5>残業実施日</h5>
            </div>
            <div class="ibox-content">
              <h1 class="no-margins text-warning"><%= total_overtime_hours.round(1) %>h</h1>
              <div class="stat-percent font-bold text-warning">
                <i class="fa fa-clock-o"></i> 残業時間
              </div>
              <small>平均: <%= current_month_overtime.count > 0 ? (total_overtime_hours / current_month_overtime.count).round(1) : 0 %>h/日</small>
            </div>
          </div>
        </div>
        
        <div class="col-lg-3 col-md-6">
          <div class="ibox float-e-margins">
            <div class="ibox-title">
              <span class="label label-info pull-right">
                <%= current_month_manager_comments %>
              </span>
              <h5>受信コメント</h5>
            </div>
            <div class="ibox-content">
              <% commented_days = manager_comments_count_by_date.select { |d, _| d.month == @current_date.month }.count %>
              <h1 class="no-margins text-info"><%= commented_days %></h1>
              <div class="stat-percent font-bold text-info">
                <i class="fa fa-comments"></i> コメント日数
              </div>
              <small>総コメント数: <%= current_month_manager_comments %>件</small>
            </div>
          </div>
        </div>
        
        <div class="col-lg-3 col-md-6">
          <div class="ibox float-e-margins">
            <div class="ibox-title">
              <% 
                today = Date.current
                today_has_report = daily_reports_dates.include?(today)
                today_has_overtime = overtime_dates.include?(today)
                today_overtime_hours = overtime_hours_by_date[today].to_f
              %>
              <span class="label <%= today_has_report ? 'label-success' : 'label-warning' %> pull-right">
                <%= today_has_report ? '完了' : '未完了' %>
              </span>
              <h5>今日の状況</h5>
            </div>
            <div class="ibox-content">
              <h1 class="no-margins <%= today_has_report ? 'text-success' : 'text-warning' %>">
                <%= today_has_report ? '提出済' : '未提出' %>
              </h1>
              <div class="stat-percent font-bold <%= today_has_overtime ? 'text-warning' : 'text-navy' %>">
                <i class="fa fa-<%= today_has_overtime ? 'clock-o' : 'check' %>"></i> 
                <%= today_has_overtime && today_overtime_hours > 0 ? "+#{today_overtime_hours}h" : (today_has_overtime ? '残業' : '定時') %>
              </div>
              <small><%= today.strftime('%m月%d日') %> (<%= %w[日 月 火 水 木 金 土][today.wday] %>)</small>
            </div>
          </div>
        </div>
      </div>
    </div>
    <%= render 'shared/footer' %>
  </div>
</div>

<!-- マネージャーコメント表示モーダル -->
<div class="modal fade" id="managerCommentsModal" tabindex="-1" role="dialog" aria-labelledby="managerCommentsModalTitle" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="閉じる">
          <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title" id="managerCommentsModalTitle">
          <i class="fa fa-comments text-info"></i> 
          <span id="commentsModalDate"></span> の日報へのマネージャーコメント
        </h4>
      </div>
      <div class="modal-body">
        <!-- 日報内容 -->
        <div class="report-content-section">
          <h5><i class="fa fa-file-text-o text-navy"></i> 日報内容</h5>
          <div class="well well-sm" id="reportContentDisplay">
            <!-- 日報内容が動的に挿入される -->
          </div>
        </div>
        
        <div class="hr-line-dashed"></div>
        
        <!-- コメント一覧 -->
        <div class="comments-section">
          <h5><i class="fa fa-comments text-info"></i> マネージャーからのコメント</h5>
          <div id="managerCommentsList" class="comments-list-display">
            <!-- コメントが動的に挿入される -->
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">閉じる</button>
      </div>
    </div>
  </div>
</div>

<style>
/* カレンダー専用CSS - INSPINIAテーマ統合 */
.calendar-container {
  background: #fff;
  border: 1px solid #e7eaec;
  border-radius: 4px;
  overflow: hidden;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.calendar-header {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  background: #f8f8f9;
  border-bottom: 2px solid #e7eaec;
}

.calendar-day-header {
  padding: 12px 8px;
  text-align: center;
  font-weight: 600;
  font-size: 13px;
  color: #676a6c;
  border-right: 1px solid #e7eaec;
  background: linear-gradient(to bottom, #fafafa 0%, #f4f4f4 100%);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.calendar-day-header:last-child {
  border-right: none;
}

.calendar-day-header.sunday {
  color: #ed5565;
  background: linear-gradient(to bottom, #fdf5f5 0%, #f8e8e8 100%);
  font-weight: 700;
}

.calendar-day-header.saturday {
  color: #23c6c8;
  background: linear-gradient(to bottom, #f5fdfd 0%, #e8f8f8 100%);
  font-weight: 700;
}

.calendar-body {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  min-height: 500px;
  background: #fff;
}

.calendar-day {
  min-height: 95px;
  border-right: 1px solid #e7eaec;
  border-bottom: 1px solid #e7eaec;
  padding: 8px;
  position: relative;
  background: #fff;
  transition: all 0.3s ease;
  cursor: pointer;
}

.calendar-day:hover {
  background-color: #f9f9f9;
  box-shadow: inset 0 0 0 2px #1ab394;
  transform: translateY(-1px);
}

.calendar-day:nth-child(7n) {
  border-right: none;
}

.calendar-day.other-month {
  background-color: #f8f8f9;
  opacity: 0.5;
}

.calendar-day.other-month:hover {
  opacity: 0.7;
}

.calendar-day.today {
  background: linear-gradient(135deg, #e8f5e8 0%, #f0f8ff 100%);
  border: 2px solid #1ab394;
  box-shadow: 0 0 15px rgba(26, 179, 148, 0.4);
  position: relative;
}

.calendar-day.today::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, #1ab394, #23c6c8);
  border-radius: 4px;
  z-index: -1;
  animation: todayGlow 2s ease-in-out infinite alternate;
}

@keyframes todayGlow {
  0% { opacity: 0.5; }
  100% { opacity: 0.8; }
}

.calendar-day.weekend {
  background-color: #fafbfc;
  border-left: 3px solid #23c6c8;
}

.day-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 8px;
  padding-bottom: 6px;
  border-bottom: 1px solid #f0f0f0;
}

.day-number {
  font-size: 16px;
  font-weight: 600;
  color: #676a6c;
  min-width: 20px;
  text-align: center;
}

.today-badge {
  background: #1ab394;
  color: white;
  font-size: 9px;
  padding: 2px 6px;
  border-radius: 12px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.day-content {
  display: flex;
  flex-direction: column;
  gap: 4px;
  height: calc(100% - 35px);
}

.status-item {
  display: flex;
  align-items: center;
  gap: 5px;
  font-size: 10px;
  padding: 3px 6px;
  border-radius: 4px;
  line-height: 1.3;
  font-weight: 500;
  transition: all 0.2s ease;
  border: none;
  background: transparent;
  cursor: default;
}

.status-item:hover {
  transform: translateX(2px);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.status-item i {
  font-size: 11px;
  width: 12px;
  text-align: center;
  flex-shrink: 0;
}

.status-item.report-done {
  background: rgba(26, 179, 148, 0.15);
  color: #1ab394;
  border: 1px solid rgba(26, 179, 148, 0.4);
  border-left: 3px solid #1ab394;
}

.status-item.report-missing {
  background: rgba(237, 85, 101, 0.15);
  color: #ed5565;
  border: 1px solid rgba(237, 85, 101, 0.4);
  border-left: 3px solid #ed5565;
}

.status-item.overtime {
  background: rgba(248, 172, 89, 0.15);
  color: #f8ac59;
  border: 1px solid rgba(248, 172, 89, 0.4);
  border-left: 3px solid #f8ac59;
}

.status-item.future {
  background: rgba(108, 117, 125, 0.1);
  color: #6c757d;
  border: 1px solid rgba(108, 117, 125, 0.3);
}

/* マネージャーコメント表示インジケーター */
.status-item.comments-indicator {
  background: rgba(35, 198, 200, 0.15);
  color: #23c6c8;
  border: 1px solid rgba(35, 198, 200, 0.4);
  border-left: 3px solid #23c6c8;
  cursor: pointer;
  position: relative;
  padding-right: 30px;
  transition: all 0.3s ease;
}

.status-item.comments-indicator:hover {
  background: rgba(35, 198, 200, 0.25);
  transform: translateX(3px) scale(1.02);
  box-shadow: 0 3px 8px rgba(35, 198, 200, 0.4);
  border-color: #23c6c8;
}

.status-item.comments-indicator:active {
  transform: translateX(1px) scale(0.98);
}

.badge-comments {
  position: absolute;
  top: 50%;
  right: 6px;
  transform: translateY(-50%);
  background: #23c6c8;
  color: white;
  font-size: 8px;
  padding: 2px 5px;
  border-radius: 8px;
  min-width: 16px;
  text-align: center;
  height: 16px;
  line-height: 12px;
}

.day-actions {
  margin-top: auto;
  display: flex;
  justify-content: center;
  gap: 3px;
  padding-top: 6px;
  border-top: 1px solid #f0f0f0;
}

.day-actions .btn {
  padding: 3px 8px;
  font-size: 10px;
  border-radius: 3px;
  transition: all 0.2s ease;
  border: none;
}

.day-actions .btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.day-actions .btn-success {
  background: #1ab394;
  color: white;
}

.day-actions .btn-success:hover {
  background: #17a085;
}

.day-actions .btn-info {
  background: #23c6c8;
  color: white;
}

.day-actions .btn-info:hover {
  background: #21b9bb;
}

.day-actions .btn-white {
  background: white;
  color: #676a6c;
  border: 1px solid #e7eaec;
}

.day-actions .btn-white:hover {
  background: #f8f8f9;
  border-color: #d2d2d2;
}

/* モーダル関連 */
.modal-content {
  border-radius: 8px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.3);
}

.modal-header {
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
  border-bottom: 2px solid #e7eaec;
  border-radius: 8px 8px 0 0;
}

.modal-title {
  font-size: 18px;
  font-weight: 600;
  color: #2f4050;
}

.modal-body {
  padding: 25px;
  max-height: 70vh;
  overflow-y: auto;
}

.report-content-section {
  margin-bottom: 20px;
}

.report-content-section .well {
  background: #f8f9fa;
  border: 1px solid #e7eaec;
  border-radius: 6px;
  font-size: 13px;
  line-height: 1.5;
  max-height: 150px;
  overflow-y: auto;
  padding: 15px;
}

.comments-list-display {
  max-height: 400px;
  overflow-y: auto;
  padding-right: 5px;
}

.comment-display-item {
  border: 1px solid #e7eaec;
  border-radius: 8px;
  padding: 15px;
  margin-bottom: 15px;
  background: #fafafa;
  transition: all 0.3s ease;
}

.comment-display-item:hover {
  background: #f5f5f5;
  border-color: #23c6c8;
  transform: translateY(-1px);
}

.comment-display-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 10px;
}

.comment-display-user-info {
  display: flex;
  align-items: center;
  gap: 10px;
}

.comment-display-avatar {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  border: 2px solid #e7eaec;
  object-fit: cover;
}

.comment-display-avatar-placeholder {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: #e7eaec;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #999;
  font-size: 12px;
  border: 2px solid #e7eaec;
}

.comment-display-user-name {
  font-weight: 600;
  color: #2f4050;
  font-size: 14px;
}

.comment-display-manager-badge {
  background: #1ab394;
  color: white;
  font-size: 9px;
  padding: 2px 6px;
  border-radius: 10px;
  margin-left: 5px;
}

.comment-display-date {
  font-size: 11px;
  color: #999;
}

.comment-display-content {
  font-size: 13px;
  line-height: 1.5;
  color: #495057;
  white-space: pre-wrap;
  background: white;
  padding: 10px;
  border-radius: 4px;
  border: 1px solid #e9ecef;
}

.empty-comments-display {
  text-align: center;
  padding: 40px 20px;
  color: #999;
}

.empty-comments-display i {
  font-size: 48px;
  margin-bottom: 15px;
  color: #ddd;
}

/* 通知 */
.notification {
  position: fixed;
  top: 70px;
  right: 20px;
  z-index: 9999;
  min-width: 300px;
  padding: 15px;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  transition: all 0.3s ease;
  opacity: 0;
  transform: translateX(100%);
}

.notification.show {
  opacity: 1;
  transform: translateX(0);
}

.notification.success {
  background: #d4edda;
  border: 1px solid #c3e6cb;
  color: #155724;
}

.notification.error {
  background: #f8d7da;
  border: 1px solid #f5c6cb;
  color: #721c24;
}

.notification .close {
  float: right;
  background: none;
  border: none;
  font-size: 18px;
  cursor: pointer;
  color: inherit;
  opacity: 0.7;
}

.notification .close:hover {
  opacity: 1;
}

/* レスポンシブ対応 */
@media (max-width: 1200px) {
  .calendar-day {
    min-height: 85px;
    padding: 6px;
  }
  
  .status-item {
    font-size: 9px;
    padding: 2px 4px;
  }
}

@media (max-width: 992px) {
  .calendar-day {
    min-height: 75px;
    padding: 4px;
  }
  
  .day-number {
    font-size: 14px;
  }
  
  .status-item {
    font-size: 8px;
    gap: 3px;
  }
  
  .status-item i {
    font-size: 9px;
  }
  
  .calendar-day-header {
    padding: 8px 4px;
    font-size: 11px;
  }
  
  .day-actions {
    flex-direction: column;
    gap: 2px;
  }
  
  .day-actions .btn {
    font-size: 9px;
    padding: 2px 6px;
  }
}

@media (max-width: 768px) {
  .calendar-body {
    min-height: 400px;
  }
  
  .calendar-day {
    min-height: 65px;
    padding: 3px;
  }
  
  .day-number {
    font-size: 12px;
  }
  
  .status-item {
    font-size: 7px;
    gap: 2px;
    padding: 1px 3px;
  }
  
  .today-badge {
    font-size: 7px;
    padding: 1px 4px;
  }
  
  .day-actions .btn {
    font-size: 8px;
    padding: 1px 4px;
  }
  
  .modal-dialog {
    margin: 10px;
  }
  
  .modal-body {
    padding: 15px;
  }
}

/* スクロールバーのスタイリング */
.comments-list-display::-webkit-scrollbar,
.report-content-section .well::-webkit-scrollbar {
  width: 4px;
}

.comments-list-display::-webkit-scrollbar-track,
.report-content-section .well::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 2px;
}

.comments-list-display::-webkit-scrollbar-thumb,
.report-content-section .well::-webkit-scrollbar-thumb {
  background: #23c6c8;
  border-radius: 2px;
}

.comments-list-display::-webkit-scrollbar-thumb:hover,
.report-content-section .well::-webkit-scrollbar-thumb:hover {
  background: #21b9bb;
}

/* アクセシビリティ対応 */
.status-item.comments-indicator:focus {
  outline: 2px solid #23c6c8;
  outline-offset: 2px;
}

.btn:focus {
  outline: 2px solid #1ab394;
  outline-offset: 2px;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('Calendar page loaded without Turbo');
  
  // HTMLエスケープ関数
  function escapeHtml(text) {
    if (!text) return '';
    const map = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#039;'
    };
    return String(text).replace(/[&<>"']/g, function(m) { return map[m]; });
  }
  
  // モーダル制御（シンプル版）
  function showModal(modalId) {
    const modal = document.getElementById(modalId);
    if (!modal) return;

    modal.style.display = 'block';
    modal.classList.add('in');
    modal.setAttribute('aria-hidden', 'false');
    document.body.classList.add('modal-open');
    
    // バックドロップを追加
    const backdrop = document.createElement('div');
    backdrop.className = 'modal-backdrop fade in';
    document.body.appendChild(backdrop);
    
    // 閉じる処理
    const closeModal = function() {
      modal.style.display = 'none';
      modal.classList.remove('in');
      modal.setAttribute('aria-hidden', 'true');
      document.body.classList.remove('modal-open');
      if (backdrop && backdrop.parentNode) {
        backdrop.parentNode.removeChild(backdrop);
      }
    };
    
    // イベント設定
    modal.querySelector('.close').onclick = closeModal;
    modal.querySelectorAll('[data-dismiss="modal"]').forEach(btn => btn.onclick = closeModal);
    backdrop.onclick = closeModal;
    
    // ESCキーで閉じる
    const escapeHandler = function(e) {
      if (e.key === 'Escape') {
        closeModal();
        document.removeEventListener('keydown', escapeHandler);
      }
    };
    document.addEventListener('keydown', escapeHandler);
  }
  
  // コメント表示ボタンのクリック処理
  document.addEventListener('click', function(e) {
    const button = e.target.closest('.comment-display-btn, .comment-view-btn');
    if (!button) return;
    
    const reportId = button.getAttribute('data-report-id');
    const dateText = button.getAttribute('data-date');
    
    if (!reportId) {
      showNotification('日報IDが取得できませんでした', 'error');
      return;
    }
    
    // モーダルタイトルを設定
    const modalDateElement = document.getElementById('commentsModalDate');
    if (modalDateElement) modalDateElement.textContent = dateText || '';
    
    // ローディング表示
    const managerCommentsList = document.getElementById('managerCommentsList');
    const reportContentDisplay = document.getElementById('reportContentDisplay');
    
    if (managerCommentsList) {
      managerCommentsList.innerHTML = '<div class="text-center"><i class="fa fa-spinner fa-spin"></i> 読み込み中...</div>';
    }
    if (reportContentDisplay) {
      reportContentDisplay.innerHTML = '<div class="text-center"><i class="fa fa-spinner fa-spin"></i> 読み込み中...</div>';
    }
    
    // モーダルを表示
    showModal('managerCommentsModal');
    
    // コメントデータを取得
    fetch(`/reports/${reportId}/comments`, {
      method: 'GET',
      headers: {
        'Accept': 'application/json'
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      if (data.status === 'success') {
        // 日報内容を表示
        if (reportContentDisplay) {
          if (data.report_content && data.report_content.trim()) {
            reportContentDisplay.innerHTML = escapeHtml(data.report_content).replace(/\n/g, '<br>');
          } else {
            reportContentDisplay.innerHTML = '<span class="text-muted">日報内容がありません</span>';
          }
        }
        
        // コメントを表示
        if (managerCommentsList) {
          displayComments(data.comments);
        }
      } else {
        showNotification('コメントの取得に失敗しました', 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showNotification('コメントの取得に失敗しました', 'error');
      if (managerCommentsList) {
        managerCommentsList.innerHTML = '<div class="text-center text-danger">コメントの読み込みに失敗しました</div>';
      }
      if (reportContentDisplay) {
        reportContentDisplay.innerHTML = '<div class="text-center text-danger">日報内容の読み込みに失敗しました</div>';
      }
    });
  });
  
  // コメント表示関数
  function displayComments(comments) {
    const managerCommentsList = document.getElementById('managerCommentsList');
    if (!managerCommentsList) return;
    
    if (!comments || comments.length === 0) {
      managerCommentsList.innerHTML = `
        <div class="empty-comments-display">
          <i class="fa fa-comments-o"></i>
          <h4>マネージャーからのコメントはありません</h4>
          <p class="text-muted">この日報にはまだマネージャーからのコメントがありません</p>
        </div>
      `;
      return;
    }
    
    let html = '';
    comments.forEach(comment => {
      html += createCommentDisplayHtml(comment);
    });
    
    managerCommentsList.innerHTML = html;
  }
  
  // コメント表示HTML生成
  function createCommentDisplayHtml(comment) {
    const avatarHtml = comment.user_avatar_url ? 
      `<img src="${comment.user_avatar_url}" class="comment-display-avatar" alt="${escapeHtml(comment.user_name)}">` :
      `<div class="comment-display-avatar-placeholder"><i class="fa fa-user"></i></div>`;
    
    const managerBadge = comment.is_manager ? 
      `<span class="comment-display-manager-badge">マネージャー</span>` : '';
    
    return `
      <div class="comment-display-item">
        <div class="comment-display-header">
          <div class="comment-display-user-info">
            ${avatarHtml}
            <div>
              <div class="comment-display-user-name">
                ${escapeHtml(comment.user_name)}
                ${managerBadge}
              </div>
              <div class="comment-display-date">${escapeHtml(comment.created_at)}</div>
            </div>
          </div>
        </div>
        <div class="comment-display-content">${escapeHtml(comment.content)}</div>
      </div>
    `;
  }
  
  // 通知表示
  function showNotification(message, type) {
    const iconClass = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
    
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.innerHTML = `
      <button class="close">&times;</button>
      <i class="fa ${iconClass}"></i> ${escapeHtml(message)}
    `;
    
    document.body.appendChild(notification);
    
    // 閉じるボタンのイベント
    const closeBtn = notification.querySelector('.close');
    if (closeBtn) {
      closeBtn.addEventListener('click', function() {
        if (notification && notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      });
    }
    
    // 3秒後に自動で消す
    setTimeout(function() {
      if (notification && notification.parentNode) {
        notification.style.opacity = '0';
        setTimeout(() => {
          if (notification && notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 300);
      }
    }, 3000);
  }
});
</script>
