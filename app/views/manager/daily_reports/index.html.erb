<% provide(:title, "チーム日報管理") %>
<div id="wrapper">
  <%= render 'shared/header' %>
  <div id="page-wrapper" class="gray-bg">
    <%= render 'shared/navbar' %>
    
    <!-- ヘッダー部分 -->
    <div class="row wrapper border-bottom white-bg page-heading">
      <div class="col-lg-12">
        <h2 class="m-t-md">
          <i class="fa fa-users text-navy"></i> チーム日報管理
          <small class="m-l-sm">(<%= @target_date.strftime("%Y年%m月%d日") %>)</small>
        </h2>
        <ol class="breadcrumb">
          <li class="breadcrumb-item">
            <a href="/">ホーム</a>
          </li>
          <li class="breadcrumb-item active">
            <strong>チーム日報管理</strong>
          </li>
        </ol>
      </div>
    </div>

    <!-- メインコンテンツ -->
    <div class="wrapper wrapper-content animated fadeInRight">
      
      <!-- 日付ナビゲーション -->
      <div class="row m-b-lg">
        <div class="col-lg-12">
          <div class="ibox">
            <div class="ibox-content text-center p-lg">
              <div class="row">
                <div class="col-md-8 col-md-offset-2">
                  <div class="btn-group btn-group-justified date-navigation" role="group">
                    <a href="<%= manager_daily_reports_path(date: @prev_date) %>" 
                       class="btn btn-white btn-lg">
                      <i class="fa fa-chevron-left"></i> 前の日
                      <small class="block text-muted"><%= @prev_date.strftime("%m/%d") %></small>
                    </a>
                    
                    <div class="btn btn-primary btn-lg current-date">
                      <i class="fa fa-calendar"></i> <%= @target_date.strftime("%m月%d日") %>
                      <small class="block text-white"><%= @target_date.strftime("(%a)") %></small>
                    </div>
                    
                    <a href="<%= manager_daily_reports_path(date: @next_date) %>" 
                       class="btn btn-white btn-lg">
                      次の日 <i class="fa fa-chevron-right"></i>
                      <small class="block text-muted"><%= @next_date.strftime("%m/%d") %></small>
                    </a>
                  </div>
                  
                  <!-- 日付直接選択 -->
                  <div class="m-t-md">
                    <input type="date" 
                           class="form-control text-center" 
                           id="dateSelector" 
                           value="<%= @target_date.strftime('%Y-%m-%d') %>">
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- 統計情報 -->
      <div class="row m-b-lg">
        <div class="col-lg-3 col-md-6">
          <div class="widget style1 navy-bg">
            <div class="row">
              <div class="col-xs-4">
                <i class="fa fa-file-text-o fa-3x"></i>
              </div>
              <div class="col-xs-8 text-right">
                <span>提出済み日報</span>
                <h2 class="font-bold"><%= @report_statistics[:submitted_count] %></h2>
                <small>/ <%= @report_statistics[:total_users] %>名</small>
              </div>
            </div>
          </div>
        </div>
        
        <div class="col-lg-3 col-md-6">
          <div class="widget style1 lazur-bg">
            <div class="row">
              <div class="col-xs-4">
                <i class="fa fa-percent fa-3x"></i>
              </div>
              <div class="col-xs-8 text-right">
                <span>提出率</span>
                <h2 class="font-bold"><%= @report_statistics[:submission_rate] %>%</h2>
                <small>日報提出状況</small>
              </div>
            </div>
          </div>
        </div>
        
        <div class="col-lg-3 col-md-6">
          <div class="widget style1 yellow-bg">
            <div class="row">
              <div class="col-xs-4">
                <i class="fa fa-clock-o fa-3x"></i>
              </div>
              <div class="col-xs-8 text-right">
                <span>総作業時間</span>
                <h2 class="font-bold"><%= @report_statistics[:total_work_hours] %></h2>
                <small>時間</small>
              </div>
            </div>
          </div>
        </div>
        
        <div class="col-lg-3 col-md-6">
          <div class="widget style1 red-bg">
            <div class="row">
              <div class="col-xs-4">
                <i class="fa fa-moon-o fa-3x"></i>
              </div>
              <div class="col-xs-8 text-right">
                <span>残業申請</span>
                <h2 class="font-bold"><%= @report_statistics[:overtime_requests] %></h2>
                <small>承認待ち</small>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- フラット一覧表示 -->
      <div class="row">
        <div class="col-lg-12">
          <div class="ibox">
            <div class="ibox-title">
              <h5>
                <i class="fa fa-list"></i> 社員別日報一覧（全表示）
              </h5>
              <div class="ibox-tools">
                <span class="text-muted">
                  <i class="fa fa-info-circle"></i> 
                  すべての情報を一覧表示
                </span>
              </div>
            </div>
            <div class="ibox-content p-n">
              
              <% if @users.any? %>
                <div class="table-responsive">
                  <table class="table table-hover table-striped m-b-none">
                    <thead>
                      <tr class="table-header">
                        <th style="width: 180px;">
                          <i class="fa fa-user"></i> 社員情報
                        </th>
                        <th style="width: 80px;" class="text-center">
                          <i class="fa fa-check"></i> 提出
                        </th>
                        <th style="width: 90px;" class="text-center">
                          <i class="fa fa-clock-o"></i> 総時間
                        </th>
                        <th>
                          <i class="fa fa-tasks"></i> 作業記録
                        </th>
                        <th style="width: 300px;">
                          <i class="fa fa-file-text-o"></i> 日報内容
                        </th>
                        <th style="width: 150px;" class="text-center">
                          <i class="fa fa-comments"></i> コメント
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      <% @users.each do |user| %>
                        <% daily_report = @reports_by_user_id[user.id] %>
                        <% works = daily_report&.daily_report_projects || [] %>
                        <% total_minutes = works.sum(&:minutes) %>
                        <% comments_count = daily_report&.comments&.count || 0 %>
                        
                        <tr class="report-row <%= 'no-report-row' unless daily_report %>">
                          <!-- 社員情報 -->
                          <td class="user-info-cell">
                            <div class="user-profile">
                              <% if user.avatar.attached? %>
                                <%= image_tag user.avatar, 
                                  class: "img-circle user-avatar-sm", 
                                  style: "width: 42px; height: 42px; object-fit: cover;",
                                  alt: user.name %>
                              <% else %>
                                <div class="user-avatar-placeholder-sm">
                                  <i class="fa fa-user"></i>
                                </div>
                              <% end %>
                              
                              <div class="user-details-compact">
                                <div class="user-name-compact"><%= user.name %></div>
                                <small class="text-muted department-info">
                                  <i class="fa fa-building-o"></i> 
                                  <%= user.department&.name || '部署未設定' %>
                                </small>
                              </div>
                            </div>
                          </td>

                          <!-- 提出状況 -->
                          <td class="text-center status-cell">
                            <% if daily_report %>
                              <span class="label label-primary label-status">
                                <i class="fa fa-check"></i> 提出済み
                              </span>
                            <% else %>
                              <span class="label label-default label-status">
                                <i class="fa fa-times"></i> 未提出
                              </span>
                            <% end %>
                          </td>

                          <!-- 総作業時間 -->
                          <td class="text-center time-cell">
                            <% if daily_report && total_minutes > 0 %>
                              <div class="work-time-display">
                                <span class="hours-number <%= total_minutes > 480 ? 'overtime-hours' : 'normal-hours' %>">
                                  <%= (total_minutes / 60.0).round(1) %>
                                </span>
                                <small class="hours-unit">時間</small>
                                <% if total_minutes > 480 %>
                                  <div class="overtime-badge">
                                    <span class="label label-warning">
                                      <i class="fa fa-moon-o"></i> 残業
                                    </span>
                                  </div>
                                <% end %>
                              </div>
                            <% else %>
                              <span class="text-muted">-</span>
                            <% end %>
                          </td>

                          <!-- 作業記録 -->
                          <td class="work-records-cell">
                            <% if daily_report && works.any? %>
                              <div class="work-items-compact">
                                <% works.each_with_index do |work, index| %>
                                  <div class="work-item-row <%= 'work-item-border' if index > 0 %>">
                                    <div class="work-item-content">
                                      <div class="client-project-info">
                                        <span class="client-name">
                                          <i class="fa fa-building text-info"></i>
                                          <%= work.project&.client&.name || '不明' %>
                                        </span>
                                        <span class="project-name">
                                          <i class="fa fa-folder-open text-success"></i>
                                          <%= work.project&.name || '不明' %>
                                        </span>
                                      </div>
                                      
                                      <div class="work-meta">
                                        <span class="work-duration">
                                          <i class="fa fa-clock-o"></i>
                                          <%= (work.minutes / 60.0).round(1) %>h
                                        </span>
                                        
                                        <% if work.is_overtime_approved %>
                                          <span class="overtime-status overtime-approved">
                                            <i class="fa fa-check-circle"></i> 承認済み
                                          </span>
                                        <% elsif work.is_overtime_requested %>
                                          <span class="overtime-status overtime-pending">
                                            <i class="fa fa-clock-o"></i> 申請中
                                          </span>
                                        <% end %>
                                      </div>
                                      
                                      <% if work.description.present? %>
                                        <div class="work-description-compact">
                                          <%= truncate(work.description, length: 60) %>
                                        </div>
                                      <% end %>
                                    </div>
                                  </div>
                                <% end %>
                              </div>
                            <% elsif daily_report %>
                              <span class="text-muted">作業記録なし</span>
                            <% else %>
                              <span class="text-muted">-</span>
                            <% end %>
                          </td>

                          <!-- 日報内容 -->
                          <td class="report-content-cell">
                            <% if daily_report && daily_report.content.present? %>
                              <div class="report-content-preview">
                                <%= simple_format(truncate(h(daily_report.content), length: 150)) %>
                                <% if daily_report.content.length > 150 %>
                                  <button class="btn btn-xs btn-link show-full-content" 
                                          data-content="<%= h(daily_report.content) %>">
                                    <i class="fa fa-expand"></i> 全文表示
                                  </button>
                                <% end %>
                              </div>
                            <% elsif daily_report %>
                              <span class="text-muted">記載なし</span>
                            <% else %>
                              <span class="text-muted">-</span>
                            <% end %>
                          </td>

                          <!-- コメント -->
                          <td class="text-center comments-cell">
                            <% if daily_report %>
                              <div class="comment-section">
                                <button class="btn btn-sm btn-primary comment-btn" 
                                        data-report-id="<%= daily_report.id %>"
                                        data-user-name="<%= user.name %>">
                                  <i class="fa fa-comment"></i> コメント
                                  <% if comments_count > 0 %>
                                    <span class="badge comment-count" id="comment-count-<%= daily_report.id %>">
                                      <%= comments_count %>
                                    </span>
                                  <% else %>
                                    <span class="badge comment-count" id="comment-count-<%= daily_report.id %>" style="display: none;">0</span>
                                  <% end %>
                                </button>
                              </div>
                            <% else %>
                              <span class="text-muted">-</span>
                            <% end %>
                          </td>
                        </tr>
                      <% end %>
                    </tbody>
                  </table>
                </div>
              <% else %>
                <div class="empty-state text-center p-xl">
                  <i class="fa fa-users fa-4x text-muted m-b-md"></i>
                  <h3 class="text-muted">社員データが見つかりません</h3>
                </div>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <%= render 'shared/footer' %>
  </div>
</div>

<!-- 日報内容全文表示モーダル -->
<div class="modal fade" id="reportContentModal" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">
          <i class="fa fa-file-text-o"></i> 日報内容（全文）
        </h4>
      </div>
      <div class="modal-body">
        <div id="fullReportContent" class="report-full-content"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">閉じる</button>
      </div>
    </div>
  </div>
</div>

<!-- コメントモーダル -->
<div class="modal fade" id="commentModal" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">
          <i class="fa fa-comments"></i> <span id="commentModalUserName"></span>さんの日報へのコメント
        </h4>
      </div>
      <div class="modal-body">
        <!-- 既存コメント一覧 -->
        <div id="commentsList" class="comments-list">
          <!-- コメントが動的に挿入される -->
        </div>
        
        <!-- 新規コメント投稿フォーム -->
        <div class="comment-form-section">
          <div class="hr-line-dashed"></div>
          <div class="ai-comment-header">
            <h5 class="pull-left"><i class="fa fa-pencil"></i> 新しいコメントを追加</h5>
            <div class="pull-right">
              <button type="button" class="btn btn-info btn-sm" id="generateAiCommentBtn">
                <i class="fa fa-magic"></i> AIで提案
              </button>
            </div>
            <div class="clearfix"></div>
          </div>
          
          <!-- AI生成コメント表示エリア -->
          <div id="aiCommentPreview" class="ai-comment-preview" style="display: none;">
            <div class="ai-comment-content">
              <div class="ai-label"><i class="fa fa-robot"></i> AI提案コメント</div>
              <div id="aiCommentText" class="ai-comment-text"></div>
              <div class="ai-comment-actions">
                <button type="button" class="btn btn-xs btn-success" id="useAiCommentBtn">
                  <i class="fa fa-check"></i> 使用する
                </button>
                <button type="button" class="btn btn-xs btn-warning" id="editAiCommentBtn">
                  <i class="fa fa-edit"></i> 編集して使用
                </button>
                <button type="button" class="btn btn-xs btn-default" id="dismissAiCommentBtn">
                  <i class="fa fa-times"></i> 使用しない
                </button>
              </div>
            </div>
          </div>
          
          <form id="commentForm">
            <div class="form-group">
              <textarea class="form-control" 
                        id="commentContent" 
                        name="content" 
                        rows="4" 
                        placeholder="コメントを入力してください..."
                        required></textarea>
            </div>
            <div class="form-group text-right">
              <button type="button" class="btn btn-default" data-dismiss="modal">キャンセル</button>
              <button type="submit" class="btn btn-primary" id="submitCommentBtn">
                <i class="fa fa-send"></i> コメントを投稿
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
/* ===== 基本スタイル ===== */
.date-navigation .btn {
  transition: all 0.3s ease;
}

.date-navigation .btn:hover:not(.current-date) {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.current-date {
  cursor: default !important;
}

/* テーブル全体 */
.table-header {
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
  border-bottom: 2px solid #1ab394;
}

.table-header th {
  font-weight: 700;
  color: #2f4050;
  vertical-align: middle;
  padding: 15px 12px;
  border-bottom: 2px solid #1ab394;
}

.report-row {
  transition: all 0.3s ease;
  border-left: 3px solid transparent;
}

.report-row:hover {
  background-color: #f8f9fa;
  border-left-color: #1ab394;
}

.report-row.no-report-row {
  background-color: #fefefe;
  border-left-color: #f8ac59;
}

.report-row.no-report-row:hover {
  background-color: #fff9e6;
}

/* ユーザー情報セル */
.user-info-cell {
  padding: 15px 12px;
}

.user-profile {
  display: flex;
  align-items: center;
  gap: 12px;
}

.user-avatar-sm {
  border: 2px solid #e7eaec;
  transition: border-color 0.3s ease;
}

.report-row:hover .user-avatar-sm {
  border-color: #1ab394;
}

.user-avatar-placeholder-sm {
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background: #e7eaec;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #999;
  font-size: 16px;
  border: 2px solid #e7eaec;
  transition: all 0.3s ease;
}

.report-row:hover .user-avatar-placeholder-sm {
  border-color: #1ab394;
  background: #f0f8f7;
  color: #1ab394;
}

.user-details-compact {
  flex: 1;
}

.user-name-compact {
  font-size: 15px;
  font-weight: 600;
  color: #2f4050;
  margin-bottom: 2px;
}

.department-info {
  font-size: 12px;
  color: #676a6c;
}

/* ステータスセル */
.status-cell {
  padding: 15px 8px;
  vertical-align: middle;
}

.label-status {
  font-size: 10px;
  padding: 6px 10px;
  border-radius: 12px;
  font-weight: 600;
}

/* 時間セル */
.time-cell {
  padding: 15px 8px;
  vertical-align: middle;
}

.work-time-display {
  text-align: center;
}

.hours-number {
  font-size: 18px;
  font-weight: 700;
  display: block;
  line-height: 1.2;
}

.normal-hours {
  color: #1ab394;
}

.overtime-hours {
  color: #f8ac59;
}

.hours-unit {
  font-size: 11px;
  color: #676a6c;
  display: block;
  margin-top: 2px;
}

.overtime-badge {
  margin-top: 5px;
}

/* 作業記録セル */
.work-records-cell {
  padding: 12px;
  vertical-align: top;
}

.work-items-compact {
  max-height: 200px;
  overflow-y: auto;
}

.work-item-row {
  padding: 8px 0;
}

.work-item-border {
  border-top: 1px solid #f1f1f1;
  margin-top: 8px;
  padding-top: 8px;
}

.work-item-content {
  font-size: 12px;
}

.client-project-info {
  margin-bottom: 4px;
}

.client-name, .project-name {
  display: block;
  margin-bottom: 2px;
  color: #495057;
}

.client-name i {
  color: #17a2b8;
  margin-right: 4px;
}

.project-name i {
  color: #28a745;
  margin-right: 4px;
}

.work-meta {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 4px;
}

.work-duration {
  background: #e9ecef;
  padding: 2px 6px;
  border-radius: 8px;
  font-size: 11px;
  font-weight: 600;
  color: #495057;
}

.overtime-status {
  font-size: 10px;
  padding: 2px 6px;
  border-radius: 8px;
  font-weight: 600;
}

.overtime-approved {
  background: #d4edda;
  color: #155724;
}

.overtime-pending {
  background: #fff3cd;
  color: #856404;
}

.work-description-compact {
  font-size: 11px;
  color: #6c757d;
  line-height: 1.3;
  margin-top: 4px;
}

/* 日報内容セル */
.report-content-cell {
  padding: 12px;
  vertical-align: top;
}

.report-content-preview {
  font-size: 12px;
  line-height: 1.4;
  color: #495057;
  max-height: 120px;
  overflow: hidden;
}

.show-full-content {
  padding: 2px 6px;
  margin-top: 5px;
  font-size: 11px;
}

/* コメントセル */
.comments-cell {
  padding: 15px 8px;
  vertical-align: middle;
}

.comment-btn {
  position: relative;
  border-radius: 20px;
  font-size: 12px;
  transition: all 0.3s ease;
}

.comment-btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.comment-btn .badge {
  position: absolute;
  top: -5px;
  right: -5px;
  background: #ed5565;
  color: white;
  font-size: 9px;
  min-width: 16px;
  height: 16px;
  line-height: 16px;
  border-radius: 8px;
}

/* コメントモーダル */
.comments-list {
  max-height: 400px;
  overflow-y: auto;
  margin-bottom: 20px;
}

.comment-item {
  border: 1px solid #e7eaec;
  border-radius: 8px;
  padding: 15px;
  margin-bottom: 15px;
  background: #fafafa;
  transition: all 0.3s ease;
  position: relative;
}

.comment-item:hover {
  background: #f5f5f5;
  border-color: #1ab394;
}

.comment-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 10px;
}

.comment-user-info {
  display: flex;
  align-items: center;
  gap: 10px;
}

.comment-avatar {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  border: 2px solid #e7eaec;
  object-fit: cover;
}

.comment-avatar-placeholder {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: #e7eaec;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #999;
  font-size: 12px;
  border: 2px solid #e7eaec;
}

.comment-user-name {
  font-weight: 600;
  color: #2f4050;
  font-size: 14px;
}

.comment-date {
  font-size: 11px;
  color: #999;
}

.comment-actions {
  display: flex;
  gap: 5px;
}

.delete-comment-btn {
  padding: 2px 6px;
  font-size: 10px;
  border-radius: 4px;
}

.comment-content {
  font-size: 13px;
  line-height: 1.5;
  color: #495057;
  white-space: pre-wrap;
}

.comment-form-section {
  background: #f8f9fa;
  border-radius: 8px;
  padding: 20px;
  margin-top: 20px;
}

.comment-form-section h5 {
  color: #2f4050;
  margin-bottom: 15px;
}

/* AI コメント関連 */
.ai-comment-header {
  margin-bottom: 15px;
}

.ai-comment-preview {
  margin-bottom: 15px;
  animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.ai-comment-content {
  background: linear-gradient(135deg, #e3f2fd 0%, #f0f8ff 100%);
  border: 1px solid #2196f3;
  border-radius: 8px;
  padding: 15px;
  position: relative;
}

.ai-label {
  background: #2196f3;
  color: white;
  font-size: 10px;
  font-weight: bold;
  padding: 2px 8px;
  border-radius: 12px;
  position: absolute;
  top: -8px;
  left: 15px;
}

.ai-comment-text {
  font-size: 13px;
  line-height: 1.5;
  color: #333;
  margin: 10px 0;
  white-space: pre-wrap;
  background: white;
  padding: 10px;
  border-radius: 4px;
  border: 1px solid #e0e0e0;
}

.ai-comment-actions {
  text-align: right;
  margin-top: 10px;
}

.ai-comment-actions .btn {
  margin-left: 5px;
  font-size: 11px;
}

#generateAiCommentBtn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.empty-comments {
  text-align: center;
  padding: 40px 20px;
  color: #999;
}

.empty-comments i {
  font-size: 48px;
  margin-bottom: 15px;
  color: #ddd;
}

/* モーダル */
.report-full-content {
  font-size: 14px;
  line-height: 1.6;
  color: #495057;
  white-space: pre-wrap;
  max-height: 400px;
  overflow-y: auto;
}

/* 通知 */
.notification {
  position: fixed;
  top: 70px;
  right: 20px;
  z-index: 9999;
  min-width: 300px;
  padding: 15px;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  transition: all 0.3s ease;
}

.notification.success {
  background: #d4edda;
  border: 1px solid #c3e6cb;
  color: #155724;
}

.notification.error {
  background: #f8d7da;
  border: 1px solid #f5c6cb;
  color: #721c24;
}

.notification .close {
  float: right;
  background: none;
  border: none;
  font-size: 18px;
  cursor: pointer;
  color: inherit;
  opacity: 0.7;
}

.notification .close:hover {
  opacity: 1;
}

/* レスポンシブ対応 */
@media (max-width: 1200px) {
  .work-records-cell,
  .report-content-cell {
    font-size: 11px;
  }
  
  .table th:nth-child(4),
  .table td:nth-child(4) {
    max-width: 250px;
  }
  
  .table th:nth-child(5),
  .table td:nth-child(5) {
    max-width: 200px;
  }
}

@media (max-width: 992px) {
  .user-profile {
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
  }
  
  .work-meta {
    flex-direction: column;
    align-items: flex-start;
    gap: 4px;
  }
  
  .table th:nth-child(4),
  .table td:nth-child(4),
  .table th:nth-child(5),
  .table td:nth-child(5),
  .table th:nth-child(6),
  .table td:nth-child(6) {
    display: none;
  }
  
  .ai-comment-header {
    text-align: center;
  }
  
  .ai-comment-header .pull-left,
  .ai-comment-header .pull-right {
    float: none !important;
    display: block;
    margin-bottom: 10px;
  }
}

@media (max-width: 768px) {
  .date-navigation .btn small {
    display: none;
  }
  
  .btn-group-justified {
    display: flex;
    flex-direction: column;
  }
  
  .btn-group-justified .btn {
    border-radius: 4px !important;
    margin-bottom: 5px;
  }
  
  .current-date {
    order: -1;
    margin-bottom: 15px;
  }
  
  .table-responsive {
    font-size: 11px;
  }
}

/* スクロールバーのスタイリング */
.work-items-compact::-webkit-scrollbar,
.report-full-content::-webkit-scrollbar,
.comments-list::-webkit-scrollbar {
  width: 4px;
}

.work-items-compact::-webkit-scrollbar-track,
.report-full-content::-webkit-scrollbar-track,
.comments-list::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 2px;
}

.work-items-compact::-webkit-scrollbar-thumb,
.report-full-content::-webkit-scrollbar-thumb,
.comments-list::-webkit-scrollbar-thumb {
  background: #1ab394;
  border-radius: 2px;
}

.work-items-compact::-webkit-scrollbar-thumb:hover,
.report-full-content::-webkit-scrollbar-thumb:hover,
.comments-list::-webkit-scrollbar-thumb:hover {
  background: #17987e;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let currentReportId = null;
  let commentsData = {};
  
  // HTMLエスケープ関数
  function escapeHtml(text) {
    const map = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#039;'
    };
    return text.replace(/[&<>"']/g, function(m) { return map[m]; });
  }
  
  // サーバーサイドからのコメントデータを取得
  <% @reports_by_user_id.each do |user_id, daily_report| %>
    <% if daily_report %>
      commentsData[<%= daily_report.id %>] = [
        <% daily_report.comments.includes(:user).each do |comment| %>
        {
          id: <%= comment.id %>,
          content: '<%= j(comment.content) %>',
          user_name: '<%= comment.user.name %>',
          user_avatar_url: '<%= comment.user.avatar.attached? ? j(url_for(comment.user.avatar_thumbnail)) : "" %>',
          created_at: '<%= time_ago_in_words(comment.created_at) %>前',
          can_delete: <%= comment.user_id == current_user.id %>
        },
        <% end %>
      ];
    <% end %>
  <% end %>
  
  // モーダル制御
  function showModal(modalId) {
    const modal = document.getElementById(modalId);
    if (!modal) return;

    modal.style.display = 'block';
    modal.classList.add('in');
    document.body.classList.add('modal-open');
    
    // バックドロップを追加
    const backdrop = document.createElement('div');
    backdrop.className = 'modal-backdrop fade in';
    backdrop.setAttribute('data-modal', modalId);
    document.body.appendChild(backdrop);
    
    // 閉じる処理を設定
    const closeModal = function() {
      modal.style.display = 'none';
      modal.classList.remove('in');
      document.body.classList.remove('modal-open');
      if (backdrop && backdrop.parentNode) {
        backdrop.parentNode.removeChild(backdrop);
      }
    };
    
    // イベントリスナーを設定
    const closeBtn = modal.querySelector('.close');
    if (closeBtn) closeBtn.onclick = closeModal;
    
    const dismissBtns = modal.querySelectorAll('[data-dismiss="modal"]');
    dismissBtns.forEach(btn => btn.onclick = closeModal);
    
    backdrop.onclick = closeModal;
    
    // ESCキーで閉じる
    const escapeHandler = function(e) {
      if (e.key === 'Escape') {
        closeModal();
        document.removeEventListener('keydown', escapeHandler);
      }
    };
    document.addEventListener('keydown', escapeHandler);
  }
  
  // 日付選択機能
  const dateSelector = document.getElementById('dateSelector');
  if (dateSelector) {
    dateSelector.addEventListener('change', function() {
      const selectedDate = this.value;
      if (selectedDate) {
        window.location.href = '<%= manager_daily_reports_path %>?date=' + encodeURIComponent(selectedDate);
      }
    });
  }
  
  // 全文表示ボタン
  document.addEventListener('click', function(e) {
    const button = e.target.closest('.show-full-content');
    if (!button) return;
    
    const fullContent = button.getAttribute('data-content') || '';
    const modalContent = document.getElementById('fullReportContent');
    if (modalContent) {
      modalContent.innerHTML = escapeHtml(fullContent).replace(/\n/g, '<br>');
      showModal('reportContentModal');
    }
  });
  
  // コメントボタンクリック
  document.addEventListener('click', function(e) {
    const button = e.target.closest('.comment-btn');
    if (!button) return;
    
    const reportId = parseInt(button.getAttribute('data-report-id'), 10);
    const userName = button.getAttribute('data-user-name') || '';
    
    currentReportId = reportId;
    const titleElement = document.getElementById('commentModalUserName');
    if (titleElement) titleElement.textContent = userName;
    
    loadComments(reportId);
    showModal('commentModal');
  });
  
  // AIコメント生成ボタン
  const generateAiBtn = document.getElementById('generateAiCommentBtn');
  if (generateAiBtn) {
    generateAiBtn.addEventListener('click', function() {
      if (!currentReportId) {
        showNotification('日報が選択されていません', 'error');
        return;
      }
      
      generateAiComment();
    });
  }
  
  // AIコメント生成関数
  function generateAiComment() {
    const generateBtn = document.getElementById('generateAiCommentBtn');
    const originalText = generateBtn.innerHTML;
    
    // ボタンを無効化
    generateBtn.disabled = true;
    generateBtn.innerHTML = '<i class="fa fa-spinner fa-spin"></i> AI生成中...';
    
    // 既存のAIプレビューを非表示
    const aiPreview = document.getElementById('aiCommentPreview');
    if (aiPreview) {
      aiPreview.style.display = 'none';
    }
    
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    
    fetch(`/manager/daily_reports/${currentReportId}/generate_ai_comment`, {
      method: 'POST',
      headers: {
        'X-CSRF-Token': csrfToken,
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      if (!response.ok) {
        return response.json().then(data => {
          throw new Error(data.message || 'AIコメント生成に失敗しました');
        });
      }
      return response.json();
    })
    .then(data => {
      if (data.status === 'success') {
        showAiCommentPreview(data.comment);
        showNotification('AIコメントを生成しました', 'success');
      } else {
        throw new Error(data.message || 'AIコメント生成に失敗しました');
      }
    })
    .catch(error => {
      console.error('AI Comment Error:', error);
      showNotification(error.message, 'error');
    })
    .finally(() => {
      generateBtn.disabled = false;
      generateBtn.innerHTML = originalText;
    });
  }
  
  // AIコメントプレビュー表示
  function showAiCommentPreview(comment) {
    const aiPreview = document.getElementById('aiCommentPreview');
    const aiText = document.getElementById('aiCommentText');
    
    if (aiPreview && aiText) {
      aiText.textContent = comment;
      aiPreview.style.display = 'block';
      
      // ボタンイベントの設定
      setupAiCommentActions(comment);
    }
  }
  
  // AIコメントアクションボタンの設定
  function setupAiCommentActions(comment) {
    const useBtn = document.getElementById('useAiCommentBtn');
    const editBtn = document.getElementById('editAiCommentBtn');
    const dismissBtn = document.getElementById('dismissAiCommentBtn');
    const commentTextarea = document.getElementById('commentContent');
    const aiPreview = document.getElementById('aiCommentPreview');
    
    // 使用するボタン
    if (useBtn) {
      useBtn.onclick = function() {
        if (commentTextarea) {
          commentTextarea.value = comment;
          commentTextarea.focus();
        }
        if (aiPreview) {
          aiPreview.style.display = 'none';
        }
      };
    }
    
    // 編集して使用ボタン
    if (editBtn) {
      editBtn.onclick = function() {
        if (commentTextarea) {
          commentTextarea.value = comment;
          commentTextarea.focus();
          commentTextarea.setSelectionRange(commentTextarea.value.length, commentTextarea.value.length);
        }
        if (aiPreview) {
          aiPreview.style.display = 'none';
        }
      };
    }
    
    // 使用しないボタン
    if (dismissBtn) {
      dismissBtn.onclick = function() {
        if (aiPreview) {
          aiPreview.style.display = 'none';
        }
      };
    }
  }
  
  // コメント読み込み
  function loadComments(reportId) {
    const commentsList = document.getElementById('commentsList');
    if (!commentsList) return;
    
    const comments = commentsData[reportId] || [];
    
    if (comments.length === 0) {
      commentsList.innerHTML = `
        <div class="empty-comments">
          <i class="fa fa-comments-o"></i>
          <h4>まだコメントがありません</h4>
          <p class="text-muted">最初のコメントを投稿してみましょう</p>
        </div>
      `;
      return;
    }
    
    let html = '';
    comments.forEach(comment => {
      html += createCommentHtml(comment);
    });
    
    commentsList.innerHTML = html;
  }
  
  // コメントHTML生成
  function createCommentHtml(comment) {
    const avatarHtml = comment.user_avatar_url ? 
      `<img src="${comment.user_avatar_url}" class="comment-avatar" alt="${escapeHtml(comment.user_name)}">` :
      `<div class="comment-avatar-placeholder"><i class="fa fa-user"></i></div>`;
    
    const deleteButton = comment.can_delete ? 
      `<button class="btn btn-xs btn-danger delete-comment-btn" data-comment-id="${comment.id}">
        <i class="fa fa-trash"></i> 削除
      </button>` : '';
    
    return `
      <div class="comment-item" data-comment-id="${comment.id}">
        <div class="comment-header">
          <div class="comment-user-info">
            ${avatarHtml}
            <div>
              <div class="comment-user-name">${escapeHtml(comment.user_name)}</div>
              <div class="comment-date">${escapeHtml(comment.created_at)}</div>
            </div>
          </div>
          <div class="comment-actions">
            ${deleteButton}
          </div>
        </div>
        <div class="comment-content">${escapeHtml(comment.content)}</div>
      </div>
    `;
  }
  
  // コメント投稿
  const commentForm = document.getElementById('commentForm');
  if (commentForm) {
    commentForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const contentElement = document.getElementById('commentContent');
      if (!contentElement) return;
      
      const content = contentElement.value.trim();
      if (!content) {
        showNotification('コメントを入力してください', 'error');
        return;
      }
      
      const submitBtn = document.getElementById('submitCommentBtn');
      const originalText = submitBtn.innerHTML;
      
      // ローディング状態
      submitBtn.disabled = true;
      submitBtn.innerHTML = '<i class="fa fa-spinner fa-spin"></i> 投稿中...';
      
      // CSRFトークンを取得
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      
      fetch(`/manager/daily_reports/${currentReportId}/comments`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': csrfToken
        },
        body: JSON.stringify({
          comment: {
            content: content
          }
        })
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        if (data.status === 'success') {
          // コメントを追加
          const commentsList = document.getElementById('commentsList');
          const emptyComments = commentsList.querySelector('.empty-comments');
          
          if (emptyComments) {
            commentsList.innerHTML = '';
          }
          
          commentsList.insertAdjacentHTML('beforeend', createCommentHtml(data.comment));
          
          // データを更新
          if (!commentsData[currentReportId]) {
            commentsData[currentReportId] = [];
          }
          commentsData[currentReportId].push(data.comment);
          
          // フォームをリセット
          contentElement.value = '';
          
          // AIプレビューを非表示
          const aiPreview = document.getElementById('aiCommentPreview');
          if (aiPreview) {
            aiPreview.style.display = 'none';
          }
          
          // コメント数バッジを更新
          updateCommentBadge(currentReportId, data.comments_count);
          
          // 成功メッセージ
          showNotification('コメントを投稿しました', 'success');
        } else {
          const message = data.errors ? data.errors.join(', ') : 'コメントの投稿に失敗しました';
          showNotification(message, 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showNotification('コメントの投稿に失敗しました', 'error');
      })
      .finally(() => {
        submitBtn.disabled = false;
        submitBtn.innerHTML = originalText;
      });
    });
  }
  
  // コメント削除
  document.addEventListener('click', function(e) {
    const button = e.target.closest('.delete-comment-btn');
    if (!button) return;
    
    const commentId = parseInt(button.getAttribute('data-comment-id'), 10);
    const commentItem = button.closest('.comment-item');
    
    if (!confirm('このコメントを削除しますか？')) {
      return;
    }
    
    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    
    fetch(`/manager/daily_reports/${currentReportId}/comments/${commentId}`, {
      method: 'DELETE',
      headers: {
        'X-CSRF-Token': csrfToken
      }
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json();
    })
    .then(data => {
      if (data.status === 'success') {
        // アニメーション付きで削除
        commentItem.style.opacity = '0';
        commentItem.style.transform = 'translateX(-20px)';
        
        setTimeout(() => {
          if (commentItem && commentItem.parentNode) {
            commentItem.parentNode.removeChild(commentItem);
          }
          
          // データから削除
          if (commentsData[currentReportId]) {
            commentsData[currentReportId] = commentsData[currentReportId].filter(c => c.id !== commentId);
          }
          
          // コメントがなくなった場合の処理
          const remainingComments = document.querySelectorAll('#commentsList .comment-item');
          if (remainingComments.length === 0) {
            loadComments(currentReportId);
          }
          
          // コメント数バッジを更新
          updateCommentBadge(currentReportId, data.comments_count);
        }, 300);
        
        showNotification('コメントを削除しました', 'success');
      } else {
        const message = data.message || 'コメントの削除に失敗しました';
        showNotification(message, 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showNotification('コメントの削除に失敗しました', 'error');
    });
  });
  
  // コメント数バッジ更新
  function updateCommentBadge(reportId, count) {
    const badge = document.getElementById(`comment-count-${reportId}`);
    if (!badge) return;
    
    if (count > 0) {
      badge.textContent = String(count);
      badge.style.display = 'inline';
    } else {
      badge.style.display = 'none';
    }
  }
  
  // 通知表示
  function showNotification(message, type) {
    const iconClass = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
    
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.innerHTML = `
      <button class="close">&times;</button>
      <i class="fa ${iconClass}"></i> ${escapeHtml(message)}
    `;
    
    document.body.appendChild(notification);
    
    // 閉じるボタンのイベント
    const closeBtn = notification.querySelector('.close');
    if (closeBtn) {
      closeBtn.addEventListener('click', function() {
        if (notification && notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      });
    }
    
    // 3秒後に自動で消す
    setTimeout(function() {
      if (notification && notification.parentNode) {
        notification.style.opacity = '0';
        setTimeout(() => {
          if (notification && notification.parentNode) {
            notification.parentNode.removeChild(notification);
          }
        }, 300);
      }
    }, 3000);
  }
  
  // 数値アニメーション関数
  function animateNumber(element, start, end, duration, isInteger) {
    const startTime = performance.now();
    
    function update(currentTime) {
      const elapsed = currentTime - startTime;
      const progress = Math.min(elapsed / duration, 1);
      
      // イージング関数（swing相当）
      const easedProgress = 0.5 - Math.cos(progress * Math.PI) / 2;
      const current = start + (end - start) * easedProgress;
      
      if (isInteger) {
        element.textContent = Math.floor(current);
      } else {
        element.textContent = current.toFixed(1);
      }
      
      if (progress < 1) {
        requestAnimationFrame(update);
      } else {
        element.textContent = isInteger ? end : end.toFixed(1);
      }
    }
    
    requestAnimationFrame(update);
  }
  
  // 統計ウィジェットのアニメーション
  const widgetNumbers = document.querySelectorAll('.widget h2');
  widgetNumbers.forEach(element => {
    const countTo = parseFloat(element.textContent);
    
    if (!isNaN(countTo)) {
      animateNumber(element, 0, countTo, 1000, countTo % 1 === 0);
    }
  });
  
  // 作業時間のアニメーション
  const hoursNumbers = document.querySelectorAll('.hours-number');
  hoursNumbers.forEach(element => {
    const countTo = parseFloat(element.textContent);
    
    if (!isNaN(countTo)) {
      animateNumber(element, 0, countTo, 1200, false);
    }
  });
  
  // テーブル行のホバー効果
  const reportRows = document.querySelectorAll('.report-row');
  reportRows.forEach(row => {
    row.addEventListener('mouseenter', function() {
      const hoursNumber = this.querySelector('.hours-number');
      if (hoursNumber) {
        hoursNumber.classList.add('text-primary');
      }
    });
    
    row.addEventListener('mouseleave', function() {
      const hoursNumber = this.querySelector('.hours-number');
      if (hoursNumber) {
        hoursNumber.classList.remove('text-primary');
      }
    });
  });
});
</script>